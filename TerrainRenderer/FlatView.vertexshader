#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in float vertex;


uniform mat4 P;
uniform mat4 V;
uniform mat4 M;
uniform mat4 MVP;

/////////////positioning 
uniform int sizeX;
uniform int sizeY;
uniform int gridPosX;
uniform int gridPosY;

out float ht;

void main()
{
    float x;
    float y; 
    x = (gl_VertexID%1201)/600.0f;
    y = gl_VertexID/1201;
    y  = -y/600.0f;
    x /= sizeX;
    y /= sizeY;
    
    if(sizeY < sizeX) y = y * sizeY/sizeX;
    else x = x * sizeX/sizeY;
    x -= 1;
    y += 1;


    if(sizeY < sizeX)
    {
        y += 2*gridPosY/(sizeY*1.0f)* sizeY/sizeX ;
        x += 2*gridPosX/(sizeX*1.0f);
    }
    else
    {
        y += 2*gridPosY/(sizeY*1.0f);
        x += 2*gridPosX/(sizeX*1.0f)* sizeX/sizeY;
    }
    //gl_Position = MVP * vec4(x, y, vertex ,1);
    gl_Position =  vec4(x, y, 0 ,1);
    ht = vertex;
}

